
// Define output stream destination
OutFileStream case1 {
    filename = "ramjet2";
}

// Define desired outputs for CaseRowViewer
CaseRowViewer Case1 {
    outStreamHandle = "case1";
    titleBody = "???????????????????? Run on ???????? at ????????";
    titleVars = { "VERSION",                 "date",     "timeOfDay" }
    variableList = { "AMBIENT.alt=Alt",
                     "AMBIENT.MN:?.????=Mn",
                     "AMBIENT.dTs:???.??=dTs",
                     "BURN.Wfuel=Wfuel@lbm/min",
                     "BURN.TtCombOut:????.??=BOT@F",
                     "PERF.Fn:?????.?=Fn"
    }
}

// Attach post execution processor to sequence
solver.postExecutionSequence.append( "Case1" );

// Run on-design case
setOption( "switchDes", "DESIGN" );
autoSolverSetup();
CASE++;
run();

// Set up off-design case
//setOption( "switchDes", "OFFDESIGN" );
//autoSolverSetup();

// Loop altitude over desired range
for (AMBIENT.W = 212.28; AMBIENT.W < 212.29; AMBIENT.W += 0.001){
    CASE++;
    run();
    cout << "For mass flow of ";
    cout << AMBIENT.W;
    cout << ", Thrust = ";
    cout << PERF.Fn;
    cout << " Lbf with nozzle area of ";
    cout << NOZZ.AthCold;
    cout << "in^2\n";

}

// Send results to outputs (ncp.view and case1)
ncpView.display();
Case1.display();
